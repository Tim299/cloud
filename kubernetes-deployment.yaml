# Persistent Volume for PostgreSQL
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/postgres

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: ecommerce_user
            - name: POSTGRES_PASSWORD
              value: ecommerce_password
            - name: POSTGRES_DB
              value: ecommerce_db
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data

---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres
  clusterIP: None # Ensures a headless service for stable DNS

---
# Product Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
        - name: product-service
          image: tim299/product-service:20241129100613
          ports:
            - containerPort: 3000
          env:
            - name: DATABASE_URL
              value: postgres://ecommerce_user:ecommerce_password@postgres:5432/ecommerce_db

---
# Product Service
apiVersion: v1
kind: Service
metadata:
  name: product-service
spec:
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000 
  type: ClusterIP    
  selector:
    app: product-service

---
# Cart Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cart-service
  template:
    metadata:
      labels:
        app: cart-service
    spec:
      containers:
        - name: cart-service
          image: tim299/cart-service:20241129100613
          ports:
            - containerPort: 3000
          env:
            - name: DATABASE_URL
              value: postgres://ecommerce_user:ecommerce_password@postgres:5432/ecommerce_db

---
# Cart Service
apiVersion: v1
kind: Service
metadata:
  name: cart-service
spec:
  ports:
  - protocol: TCP
    port: 3000      
    targetPort: 3000 
  type: ClusterIP   
  selector:
    app: cart-service

---
# Order Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
        - name: order-service
          image: tim299/order-service:20241129100613
          ports:
            - containerPort: 3000
          env:
            - name: DATABASE_URL
              value: postgres://ecommerce_user:ecommerce_password@postgres:5432/ecommerce_db

---
# Order Service
apiVersion: v1
kind: Service
metadata:
  name: order-service
spec:
  ports:
  - protocol: TCP
    port: 3000       
    targetPort: 3000 
  type: ClusterIP    
  selector:
    app: order-service

---
# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: tim299/api-gateway:20241129100613
          ports:
            - containerPort: 3000

---
# API Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
spec:
  ports:
  - protocol: TCP
    port: 3000 
    targetPort: 3000 
    nodePort: 30004
  selector:
    app: api-gateway
  type: NodePort 

---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: tim299/frontend:20241129100613
          imagePullPolicy: Always
          ports:
            - containerPort: 3000

---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  ports:
  - protocol: TCP
    port: 3000        
    targetPort: 3000  
    nodePort: 30001
  selector:
    app: frontend
  type: NodePort 
